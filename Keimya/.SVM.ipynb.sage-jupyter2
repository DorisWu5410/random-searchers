{"backend_state":"running","connection_file":"/projects/0f214c2c-3a4f-4d36-bdfe-4d58d7af3d54/.local/share/jupyter/runtime/kernel-7362c44d-1481-4bb3-ad49-2120f8e184b5.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657815904316,"exec_count":30,"id":"c4f302","input":"from sklearn import svm","kernel":"python3-ubuntu","pos":29,"start":1657815904302,"state":"done","type":"cell"}
{"cell_type":"code","end":1657815907334,"exec_count":33,"id":"260ae8","input":"idx= np.arange(len(x))\nnp.random.shuffle(idx)\n\nsplit_threshold = int(len(x)* 0.8)","kernel":"python3-ubuntu","pos":44,"start":1657815907317,"state":"done","type":"cell"}
{"cell_type":"code","end":1657815908111,"exec_count":34,"id":"4d5b0a","input":"x_train= x[:split_threshold]\nx_test= x[split_threshold:]\n\ny_train= x[:split_threshold]\ny_test= x[split_threshold:]\n","kernel":"python3-ubuntu","pos":45,"start":1657815908105,"state":"done","type":"cell"}
{"cell_type":"code","end":1657815910381,"exec_count":35,"id":"a369cc","input":"clf = RandomForestClassifier(max_depth= 3, random_state = 0, n_estimators = 20  )","kernel":"python3-ubuntu","pos":47,"start":1657815910373,"state":"done","type":"cell"}
{"cell_type":"code","end":1657815911225,"exec_count":36,"id":"38966d","input":"clf.fit(x_train, y_train)","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"RandomForestClassifier(max_depth=3, n_estimators=20, random_state=0)"},"exec_count":36}},"pos":48,"start":1657815911182,"state":"done","type":"cell"}
{"cell_type":"code","end":1657815912418,"exec_count":37,"id":"3781c3","input":"y_hat = clf.predict(x_test)","kernel":"python3-ubuntu","pos":49,"start":1657815912408,"state":"done","type":"cell"}
{"cell_type":"code","end":1657815913046,"exec_count":38,"id":"a8ff72","input":"from sklearn.tree import export_graphviz\nestimator = clf.estimators_[15]","kernel":"python3-ubuntu","pos":50,"start":1657815913042,"state":"done","type":"cell"}
{"cell_type":"code","end":1657815913929,"exec_count":39,"id":"09c266","input":"export_graphviz(estimator, out_file= 'tree.dot',\n                rounded = True, proportion = False,\n                precision =2, filled =True)","kernel":"python3-ubuntu","pos":51,"start":1657815913911,"state":"done","type":"cell"}
{"cell_type":"code","end":1657815915756,"exec_count":40,"id":"3a9ffa","input":"from subprocess import call\ncall(['dot', '-Tpng', 'tree.dot', '-o', 'tree.png', '-Gdpi=600'])\n\nfrom IPython.display import Image\nImage(filename = 'tree.png')","kernel":"python3-ubuntu","output":{"0":{"data":{"image/png":"0ee5c0c53d3e21a3ba4c5dad3d5d73129127ff6e","text/plain":"<IPython.core.display.Image object>"},"exec_count":40}},"pos":53,"start":1657815914597,"state":"done","type":"cell"}
{"cell_type":"code","end":1657817041797,"exec_count":55,"id":"1304ff","input":"ax = sns.countplot(y,label=\"Count\")       # M = 212, B = 357\nB, M = y.value_counts()\nprint('Number of Benign: ',B)\nprint('Number of Malignant : ',M)","kernel":"python3-ubuntu","output":{"0":{"name":"stderr","text":"/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning:\n\nPass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n\n"},"1":{"name":"stdout","text":"Number of Benign:  191\nNumber of Malignant :  81\n"},"2":{"data":{"image/png":"c0b8c6dcda24199e2f3949de808b720c2f19dd84","text/plain":"<Figure size 864x504 with 1 Axes>"},"metadata":{"image/png":{"height":428,"width":723},"needs_background":"light"}}},"pos":61,"start":1657817041475,"state":"done","type":"cell"}
{"cell_type":"code","end":1657827679823,"exec_count":133,"id":"fa4f76","input":"my_data.dropna(inplace = True)\nmy_data.drop_duplicates(inplace = True)\nmy_data = my_data.reset_index(drop=True)\n\nlength = len(my_data.index)","kernel":"python3-ubuntu","pos":3,"start":1657827679503,"state":"done","type":"cell"}
{"cell_type":"code","end":1657827685367,"exec_count":134,"id":"2c7334","input":"my_data[\"survival\"].min()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"0.711841"},"exec_count":134}},"pos":7,"start":1657827685355,"state":"done","type":"cell"}
{"cell_type":"code","end":1657827686642,"exec_count":135,"id":"b6de2f","input":"my_data[\"survival\"].max()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"18.340862"},"exec_count":135}},"pos":8,"start":1657827686632,"state":"done","type":"cell"}
{"cell_type":"code","end":1657827688010,"exec_count":136,"id":"17884d","input":"my_data[\"survival\"].mean()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"8.080608937500001"},"exec_count":136}},"pos":9,"start":1657827687999,"state":"done","type":"cell"}
{"cell_type":"code","end":1657827698553,"exec_count":137,"id":"ffcfe8","input":"my_data[\"eventdeath\"]","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"0      0\n1      0\n2      0\n3      0\n4      0\n      ..\n267    1\n268    1\n269    1\n270    1\n271    1\nName: eventdeath, Length: 272, dtype: int64"},"exec_count":137}},"pos":11,"scrolled":true,"start":1657827698546,"state":"done","type":"cell"}
{"cell_type":"code","end":1657827714065,"exec_count":138,"id":"13bce0","input":"#for survival < 10,= low\n#for survival > 10 = high","kernel":"python3-ubuntu","pos":15,"start":1657827714050,"state":"done","type":"cell"}
{"cell_type":"code","end":1657827718403,"exec_count":139,"id":"0bce14","input":"def divide_survival(x):\n    if x <= 10:\n        return \"low\"\n    else:\n        return \"high\"","kernel":"python3-ubuntu","pos":16,"start":1657827718399,"state":"done","type":"cell"}
{"cell_type":"code","end":1657827720171,"exec_count":140,"id":"cc713b","input":"my_data[\"survival\"].apply(divide_survival)","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"0      high\n1      high\n2       low\n3       low\n4       low\n       ... \n267     low\n268     low\n269     low\n270     low\n271     low\nName: survival, Length: 272, dtype: object"},"exec_count":140}},"pos":17,"scrolled":true,"start":1657827720142,"state":"done","type":"cell"}
{"cell_type":"code","end":1657827721580,"exec_count":141,"id":"e628ea","input":"my_data[\"survival_type\"] = my_data [\"survival\"].apply(divide_survival)","kernel":"python3-ubuntu","pos":18,"start":1657827721565,"state":"done","type":"cell"}
{"cell_type":"code","end":1657831796925,"exec_count":170,"id":"777a73","input":"from sklearn import svm","kernel":"python3-ubuntu","pos":25,"start":1657831796910,"state":"done","type":"cell"}
{"cell_type":"code","end":1657831807554,"exec_count":171,"id":"3abc5c","input":"from sklearn.ensemble import RandomForestClassifier","kernel":"python3-ubuntu","pos":28,"start":1657831807550,"state":"done","type":"cell"}
{"cell_type":"code","end":1657833557030,"exec_count":181,"id":"cdda59","input":"dt = DecisionTreeClassifier(criterion='entropy', max_depth=2, random_state=1)\ndt.fit(X_train, y_train)","kernel":"python3-ubuntu","output":{"0":{"ename":"ValueError","evalue":"Unknown label type: 'continuous'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-181-099dbd771011>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mdt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDecisionTreeClassifier\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcriterion\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'entropy'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/sklearn/tree/_classes.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight, check_input, X_idx_sorted)\u001b[0m\n\u001b[1;32m    935\u001b[0m         \"\"\"\n\u001b[1;32m    936\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 937\u001b[0;31m         super().fit(\n\u001b[0m\u001b[1;32m    938\u001b[0m             \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    939\u001b[0m             \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/sklearn/tree/_classes.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight, check_input, X_idx_sorted)\u001b[0m\n\u001b[1;32m    201\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    202\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mis_classification\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 203\u001b[0;31m             \u001b[0mcheck_classification_targets\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    204\u001b[0m             \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    205\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/sklearn/utils/multiclass.py\u001b[0m in \u001b[0;36mcheck_classification_targets\u001b[0;34m(y)\u001b[0m\n\u001b[1;32m    195\u001b[0m         \u001b[0;34m\"multilabel-sequences\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    196\u001b[0m     ]:\n\u001b[0;32m--> 197\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Unknown label type: %r\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0my_type\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    198\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    199\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Unknown label type: 'continuous'"]}},"pos":36,"start":1657833557001,"state":"done","type":"cell"}
{"cell_type":"code","end":1657834405957,"exec_count":193,"id":"81a2d6","input":"filename = \"./NKI_cleaned.csv\"\nmy_data = pd.read_csv(filename)      # Loading the data\n\n                                     # print the shape\nprint(my_data.shape)\n\n                                     #runs the first 5 rows\nmy_data.head()","kernel":"python3-ubuntu","output":{"0":{"name":"stdout","text":"(272, 1570)\n"},"1":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Patient</th>\n      <th>ID</th>\n      <th>age</th>\n      <th>eventdeath</th>\n      <th>survival</th>\n      <th>timerecurrence</th>\n      <th>chemo</th>\n      <th>hormonal</th>\n      <th>amputation</th>\n      <th>histtype</th>\n      <th>...</th>\n      <th>Contig36312_RC</th>\n      <th>Contig38980_RC</th>\n      <th>NM_000853</th>\n      <th>NM_000854</th>\n      <th>NM_000860</th>\n      <th>Contig29014_RC</th>\n      <th>Contig46616_RC</th>\n      <th>NM_000888</th>\n      <th>NM_000898</th>\n      <th>AF067420</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>s122</td>\n      <td>18</td>\n      <td>43</td>\n      <td>0</td>\n      <td>14.817248</td>\n      <td>14.817248</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0.591103</td>\n      <td>-0.355018</td>\n      <td>0.373644</td>\n      <td>-0.760690</td>\n      <td>-0.164025</td>\n      <td>-0.038726</td>\n      <td>0.237856</td>\n      <td>-0.087631</td>\n      <td>-0.369153</td>\n      <td>0.153795</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>s123</td>\n      <td>19</td>\n      <td>48</td>\n      <td>0</td>\n      <td>14.261465</td>\n      <td>14.261465</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>-0.199829</td>\n      <td>-0.001635</td>\n      <td>-0.062922</td>\n      <td>-0.682204</td>\n      <td>-0.220934</td>\n      <td>-0.100088</td>\n      <td>-0.466537</td>\n      <td>-0.231547</td>\n      <td>-0.643019</td>\n      <td>-0.014098</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>s124</td>\n      <td>20</td>\n      <td>38</td>\n      <td>0</td>\n      <td>6.644764</td>\n      <td>6.644764</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0.328736</td>\n      <td>-0.047571</td>\n      <td>0.084228</td>\n      <td>-0.695950</td>\n      <td>-0.402840</td>\n      <td>-0.099965</td>\n      <td>0.110155</td>\n      <td>-0.114298</td>\n      <td>0.258495</td>\n      <td>-0.198911</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>s125</td>\n      <td>21</td>\n      <td>50</td>\n      <td>0</td>\n      <td>7.748118</td>\n      <td>7.748118</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0.648861</td>\n      <td>-0.039088</td>\n      <td>0.182182</td>\n      <td>-0.524640</td>\n      <td>0.037320</td>\n      <td>-0.167688</td>\n      <td>-0.016790</td>\n      <td>-0.285344</td>\n      <td>-0.251188</td>\n      <td>0.862710</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>s126</td>\n      <td>22</td>\n      <td>38</td>\n      <td>0</td>\n      <td>6.436687</td>\n      <td>6.318960</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>-0.287538</td>\n      <td>-0.286893</td>\n      <td>0.057082</td>\n      <td>-0.565021</td>\n      <td>-0.105632</td>\n      <td>-0.108148</td>\n      <td>-0.405853</td>\n      <td>-0.053601</td>\n      <td>-0.677072</td>\n      <td>0.134160</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 1570 columns</p>\n</div>","text/plain":"  Patient  ID  age  eventdeath   survival  timerecurrence  chemo  hormonal  \\\n0    s122  18   43           0  14.817248       14.817248      0         0   \n1    s123  19   48           0  14.261465       14.261465      0         0   \n2    s124  20   38           0   6.644764        6.644764      0         0   \n3    s125  21   50           0   7.748118        7.748118      0         1   \n4    s126  22   38           0   6.436687        6.318960      0         0   \n\n   amputation  histtype  ...  Contig36312_RC  Contig38980_RC  NM_000853  \\\n0           1         1  ...        0.591103       -0.355018   0.373644   \n1           0         1  ...       -0.199829       -0.001635  -0.062922   \n2           0         1  ...        0.328736       -0.047571   0.084228   \n3           0         1  ...        0.648861       -0.039088   0.182182   \n4           1         1  ...       -0.287538       -0.286893   0.057082   \n\n   NM_000854  NM_000860  Contig29014_RC  Contig46616_RC  NM_000888  NM_000898  \\\n0  -0.760690  -0.164025       -0.038726        0.237856  -0.087631  -0.369153   \n1  -0.682204  -0.220934       -0.100088       -0.466537  -0.231547  -0.643019   \n2  -0.695950  -0.402840       -0.099965        0.110155  -0.114298   0.258495   \n3  -0.524640   0.037320       -0.167688       -0.016790  -0.285344  -0.251188   \n4  -0.565021  -0.105632       -0.108148       -0.405853  -0.053601  -0.677072   \n\n   AF067420  \n0  0.153795  \n1 -0.014098  \n2 -0.198911  \n3  0.862710  \n4  0.134160  \n\n[5 rows x 1570 columns]"},"exec_count":193}},"pos":2,"scrolled":false,"start":1657834405805,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"03bc30","input":"","pos":62,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"846d29","input":"","pos":63,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"871867","input":"","pos":64,"type":"cell"}
{"cell_type":"code","exec_count":192,"id":"de78b1","input":" # Load Libraries \nimport pandas as pd\nimport numpy as py\nimport matplotlib.pyplot as plt\nimport random\nfrom sklearn import datasets, linear_model\nfrom sklearn.model_selection import train_test_split\n\nimport seaborn as sns","kernel":"python3-ubuntu","pos":1,"state":"done","type":"cell"}
{"cell_type":"code","id":"606fa7","input":"","kernel":"python3-ubuntu","pos":59,"type":"cell"}
{"cell_type":"code","id":"93aed7","input":"","kernel":"python3-ubuntu","pos":33,"type":"cell"}
{"cell_type":"code","id":"a139c3","input":"","kernel":"python3-ubuntu","pos":60,"type":"cell"}
{"cell_type":"code","id":"c2bde7","input":"","pos":46,"type":"cell"}
{"cell_type":"code","id":"c9a469","input":"","kernel":"python3-ubuntu","pos":19,"type":"cell"}
{"cell_type":"code","id":"e74c52","input":"","kernel":"python3-ubuntu","pos":34,"type":"cell"}
{"cell_type":"markdown","id":"275d85","input":"<u>**Survival**</u>\n\n","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"2d0e9f","input":"Running Random Forest\n","pos":40,"type":"cell"}
{"cell_type":"markdown","id":"3368f0","input":"Number of patients: 272\n\nEvent Deaths: 73\n\nLow Survival: 190\n\nHigh Survival: 82\n\n","kernel":"python3-ubuntu","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"42c297","input":"We want to predict low vs high survival rate. \n","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"636898","input":"**SVM \\(Support Vector Machine\\):** supervised machine learning model that uses classification algorithm for two\\-group classification problems.\n\n","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"c675eb","input":"<u>**Clean Data**</u>\n","pos":2.5,"type":"cell"}
{"cell_type":"markdown","id":"c69ef0","input":"**Random Forest:** a machine learning technique that’s used to solve regression and classification problems. It utilizes ensemble learning, which is a technique that combines many classifiers to provide solutions to complex problems.\n","pos":27,"type":"cell"}
{"end":1657816623745,"exec_count":50,"id":"0a29f1","input":"def divide_survival(x):\n    if x <= 10:\n        return \"low\"\n    else:\n        return \"high\"","kernel":"python3-ubuntu","pos":57,"start":1657816623658,"state":"done","type":"cell"}
{"end":1657816625038,"exec_count":51,"id":"ecf949","input":"import numpy as np; print(np.__file__); print(np.ndarray)","kernel":"python3-ubuntu","output":{"0":{"name":"stdout","text":"/usr/local/lib/python3.8/dist-packages/numpy/__init__.py\n<class 'numpy.ndarray'>\n"}},"pos":58,"start":1657816625009,"state":"done","type":"cell"}
{"end":1657826353589,"exec_count":121,"id":"ff764d","input":"def divide_eventdeath(x):\n    if x <= 0:\n        return \"low\"\n    else:\n        return \"high\"","kernel":"python3-ubuntu","pos":12,"start":1657826353572,"state":"done","type":"cell"}
{"end":1657826381557,"exec_count":122,"id":"700f96","input":"my_data[\"eventdeath\"].apply(divide_survival)","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"0      low\n1      low\n2      low\n3      low\n4      low\n      ... \n267    low\n268    low\n269    low\n270    low\n271    low\nName: eventdeath, Length: 272, dtype: object"},"exec_count":122}},"pos":13,"start":1657826381551,"state":"done","type":"cell"}
{"end":1657827736354,"exec_count":143,"id":"a990de","input":"my_data.head()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Patient</th>\n      <th>ID</th>\n      <th>age</th>\n      <th>eventdeath</th>\n      <th>survival</th>\n      <th>timerecurrence</th>\n      <th>chemo</th>\n      <th>hormonal</th>\n      <th>amputation</th>\n      <th>histtype</th>\n      <th>...</th>\n      <th>Contig38980_RC</th>\n      <th>NM_000853</th>\n      <th>NM_000854</th>\n      <th>NM_000860</th>\n      <th>Contig29014_RC</th>\n      <th>Contig46616_RC</th>\n      <th>NM_000888</th>\n      <th>NM_000898</th>\n      <th>AF067420</th>\n      <th>survival_type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>s122</td>\n      <td>18</td>\n      <td>43</td>\n      <td>0</td>\n      <td>14.817248</td>\n      <td>14.817248</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>-0.355018</td>\n      <td>0.373644</td>\n      <td>-0.760690</td>\n      <td>-0.164025</td>\n      <td>-0.038726</td>\n      <td>0.237856</td>\n      <td>-0.087631</td>\n      <td>-0.369153</td>\n      <td>0.153795</td>\n      <td>high</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>s123</td>\n      <td>19</td>\n      <td>48</td>\n      <td>0</td>\n      <td>14.261465</td>\n      <td>14.261465</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>-0.001635</td>\n      <td>-0.062922</td>\n      <td>-0.682204</td>\n      <td>-0.220934</td>\n      <td>-0.100088</td>\n      <td>-0.466537</td>\n      <td>-0.231547</td>\n      <td>-0.643019</td>\n      <td>-0.014098</td>\n      <td>high</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>s124</td>\n      <td>20</td>\n      <td>38</td>\n      <td>0</td>\n      <td>6.644764</td>\n      <td>6.644764</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>-0.047571</td>\n      <td>0.084228</td>\n      <td>-0.695950</td>\n      <td>-0.402840</td>\n      <td>-0.099965</td>\n      <td>0.110155</td>\n      <td>-0.114298</td>\n      <td>0.258495</td>\n      <td>-0.198911</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>s125</td>\n      <td>21</td>\n      <td>50</td>\n      <td>0</td>\n      <td>7.748118</td>\n      <td>7.748118</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>-0.039088</td>\n      <td>0.182182</td>\n      <td>-0.524640</td>\n      <td>0.037320</td>\n      <td>-0.167688</td>\n      <td>-0.016790</td>\n      <td>-0.285344</td>\n      <td>-0.251188</td>\n      <td>0.862710</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>s126</td>\n      <td>22</td>\n      <td>38</td>\n      <td>0</td>\n      <td>6.436687</td>\n      <td>6.318960</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>-0.286893</td>\n      <td>0.057082</td>\n      <td>-0.565021</td>\n      <td>-0.105632</td>\n      <td>-0.108148</td>\n      <td>-0.405853</td>\n      <td>-0.053601</td>\n      <td>-0.677072</td>\n      <td>0.134160</td>\n      <td>low</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 1571 columns</p>\n</div>","text/plain":"  Patient  ID  age  eventdeath   survival  timerecurrence  chemo  hormonal  \\\n0    s122  18   43           0  14.817248       14.817248      0         0   \n1    s123  19   48           0  14.261465       14.261465      0         0   \n2    s124  20   38           0   6.644764        6.644764      0         0   \n3    s125  21   50           0   7.748118        7.748118      0         1   \n4    s126  22   38           0   6.436687        6.318960      0         0   \n\n   amputation  histtype  ...  Contig38980_RC  NM_000853  NM_000854  NM_000860  \\\n0           1         1  ...       -0.355018   0.373644  -0.760690  -0.164025   \n1           0         1  ...       -0.001635  -0.062922  -0.682204  -0.220934   \n2           0         1  ...       -0.047571   0.084228  -0.695950  -0.402840   \n3           0         1  ...       -0.039088   0.182182  -0.524640   0.037320   \n4           1         1  ...       -0.286893   0.057082  -0.565021  -0.105632   \n\n   Contig29014_RC  Contig46616_RC  NM_000888  NM_000898  AF067420  \\\n0       -0.038726        0.237856  -0.087631  -0.369153  0.153795   \n1       -0.100088       -0.466537  -0.231547  -0.643019 -0.014098   \n2       -0.099965        0.110155  -0.114298   0.258495 -0.198911   \n3       -0.167688       -0.016790  -0.285344  -0.251188  0.862710   \n4       -0.108148       -0.405853  -0.053601  -0.677072  0.134160   \n\n   survival_type  \n0           high  \n1           high  \n2            low  \n3            low  \n4            low  \n\n[5 rows x 1571 columns]"},"exec_count":143}},"pos":21,"start":1657827736342,"state":"done","type":"cell"}
{"end":1657828945237,"exec_count":153,"id":"487463","input":"# Limiting the data\nmy_data2 = my_data[['age','survival','eventdeath','timerecurrence','Contig36312_RC', 'Contig38980_RC', 'NM_000853','NM_000854', 'NM_000860', 'Contig29014_RC', 'Contig46616_RC', 'NM_000888', 'NM_000898', 'AF067420']]\n\n# Visualize the data using seaborn Pairplots\ng = sns.pairplot(my_data2, hue = 'eventdeath', diag_kws={'bw': 0.2})","kernel":"python3-ubuntu","output":{"0":{"data":{"image/png":"b426d07b99cbfbd7fc6bd791398a7fa5a9b1cc8e","text/plain":"<Figure size 2417.93x2340 with 182 Axes>"},"metadata":{"image/png":{"height":2295,"width":2396}}}},"pos":22,"start":1657828868442,"state":"done","type":"cell"}
{"end":1657830414661,"exec_count":162,"id":"e566f0","input":"# Scaling our columns\n\nscale_vars = ['timerecurrence','survival']\nscaler = MinMaxScaler()\nnew_raw_data[scale_vars] = scaler.fit_transform(new_raw_data[scale_vars])\nnew_raw_data.head()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>survival</th>\n      <th>timerecurrence</th>\n      <th>Contig36312_RC</th>\n      <th>Contig38980_RC</th>\n      <th>NM_000853</th>\n      <th>NM_000854</th>\n      <th>NM_000860</th>\n      <th>Contig29014_RC</th>\n      <th>Contig46616_RC</th>\n      <th>NM_000888</th>\n      <th>NM_000898</th>\n      <th>AF067420</th>\n      <th>eventdeath_0</th>\n      <th>eventdeath_1</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>43</td>\n      <td>0.800124</td>\n      <td>0.805000</td>\n      <td>0.591103</td>\n      <td>-0.355018</td>\n      <td>0.373644</td>\n      <td>-0.760690</td>\n      <td>-0.164025</td>\n      <td>-0.038726</td>\n      <td>0.237856</td>\n      <td>-0.087631</td>\n      <td>-0.369153</td>\n      <td>0.153795</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>48</td>\n      <td>0.768598</td>\n      <td>0.774242</td>\n      <td>-0.199829</td>\n      <td>-0.001635</td>\n      <td>-0.062922</td>\n      <td>-0.682204</td>\n      <td>-0.220934</td>\n      <td>-0.100088</td>\n      <td>-0.466537</td>\n      <td>-0.231547</td>\n      <td>-0.643019</td>\n      <td>-0.014098</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>38</td>\n      <td>0.336543</td>\n      <td>0.352727</td>\n      <td>0.328736</td>\n      <td>-0.047571</td>\n      <td>0.084228</td>\n      <td>-0.695950</td>\n      <td>-0.402840</td>\n      <td>-0.099965</td>\n      <td>0.110155</td>\n      <td>-0.114298</td>\n      <td>0.258495</td>\n      <td>-0.198911</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>50</td>\n      <td>0.399130</td>\n      <td>0.413788</td>\n      <td>0.648861</td>\n      <td>-0.039088</td>\n      <td>0.182182</td>\n      <td>-0.524640</td>\n      <td>0.037320</td>\n      <td>-0.167688</td>\n      <td>-0.016790</td>\n      <td>-0.285344</td>\n      <td>-0.251188</td>\n      <td>0.862710</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>38</td>\n      <td>0.324740</td>\n      <td>0.334697</td>\n      <td>-0.287538</td>\n      <td>-0.286893</td>\n      <td>0.057082</td>\n      <td>-0.565021</td>\n      <td>-0.105632</td>\n      <td>-0.108148</td>\n      <td>-0.405853</td>\n      <td>-0.053601</td>\n      <td>-0.677072</td>\n      <td>0.134160</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   age  survival  timerecurrence  Contig36312_RC  Contig38980_RC  NM_000853  \\\n0   43  0.800124        0.805000        0.591103       -0.355018   0.373644   \n1   48  0.768598        0.774242       -0.199829       -0.001635  -0.062922   \n2   38  0.336543        0.352727        0.328736       -0.047571   0.084228   \n3   50  0.399130        0.413788        0.648861       -0.039088   0.182182   \n4   38  0.324740        0.334697       -0.287538       -0.286893   0.057082   \n\n   NM_000854  NM_000860  Contig29014_RC  Contig46616_RC  NM_000888  NM_000898  \\\n0  -0.760690  -0.164025       -0.038726        0.237856  -0.087631  -0.369153   \n1  -0.682204  -0.220934       -0.100088       -0.466537  -0.231547  -0.643019   \n2  -0.695950  -0.402840       -0.099965        0.110155  -0.114298   0.258495   \n3  -0.524640   0.037320       -0.167688       -0.016790  -0.285344  -0.251188   \n4  -0.565021  -0.105632       -0.108148       -0.405853  -0.053601  -0.677072   \n\n   AF067420  eventdeath_0  eventdeath_1  \n0  0.153795             1             0  \n1 -0.014098             1             0  \n2 -0.198911             1             0  \n3  0.862710             1             0  \n4  0.134160             1             0  "},"exec_count":162}},"pos":31,"start":1657830414593,"state":"done","type":"cell"}
{"end":1657830553203,"exec_count":167,"id":"b1bc02","input":"\nnew_raw_data = pd.get_dummies(my_data2, columns = ['eventdeath'])\nnew_raw_data.head()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>survival</th>\n      <th>timerecurrence</th>\n      <th>Contig36312_RC</th>\n      <th>Contig38980_RC</th>\n      <th>NM_000853</th>\n      <th>NM_000854</th>\n      <th>NM_000860</th>\n      <th>Contig29014_RC</th>\n      <th>Contig46616_RC</th>\n      <th>NM_000888</th>\n      <th>NM_000898</th>\n      <th>AF067420</th>\n      <th>eventdeath_0</th>\n      <th>eventdeath_1</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>43</td>\n      <td>14.817248</td>\n      <td>14.817248</td>\n      <td>0.591103</td>\n      <td>-0.355018</td>\n      <td>0.373644</td>\n      <td>-0.760690</td>\n      <td>-0.164025</td>\n      <td>-0.038726</td>\n      <td>0.237856</td>\n      <td>-0.087631</td>\n      <td>-0.369153</td>\n      <td>0.153795</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>48</td>\n      <td>14.261465</td>\n      <td>14.261465</td>\n      <td>-0.199829</td>\n      <td>-0.001635</td>\n      <td>-0.062922</td>\n      <td>-0.682204</td>\n      <td>-0.220934</td>\n      <td>-0.100088</td>\n      <td>-0.466537</td>\n      <td>-0.231547</td>\n      <td>-0.643019</td>\n      <td>-0.014098</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>38</td>\n      <td>6.644764</td>\n      <td>6.644764</td>\n      <td>0.328736</td>\n      <td>-0.047571</td>\n      <td>0.084228</td>\n      <td>-0.695950</td>\n      <td>-0.402840</td>\n      <td>-0.099965</td>\n      <td>0.110155</td>\n      <td>-0.114298</td>\n      <td>0.258495</td>\n      <td>-0.198911</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>50</td>\n      <td>7.748118</td>\n      <td>7.748118</td>\n      <td>0.648861</td>\n      <td>-0.039088</td>\n      <td>0.182182</td>\n      <td>-0.524640</td>\n      <td>0.037320</td>\n      <td>-0.167688</td>\n      <td>-0.016790</td>\n      <td>-0.285344</td>\n      <td>-0.251188</td>\n      <td>0.862710</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>38</td>\n      <td>6.436687</td>\n      <td>6.318960</td>\n      <td>-0.287538</td>\n      <td>-0.286893</td>\n      <td>0.057082</td>\n      <td>-0.565021</td>\n      <td>-0.105632</td>\n      <td>-0.108148</td>\n      <td>-0.405853</td>\n      <td>-0.053601</td>\n      <td>-0.677072</td>\n      <td>0.134160</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   age   survival  timerecurrence  Contig36312_RC  Contig38980_RC  NM_000853  \\\n0   43  14.817248       14.817248        0.591103       -0.355018   0.373644   \n1   48  14.261465       14.261465       -0.199829       -0.001635  -0.062922   \n2   38   6.644764        6.644764        0.328736       -0.047571   0.084228   \n3   50   7.748118        7.748118        0.648861       -0.039088   0.182182   \n4   38   6.436687        6.318960       -0.287538       -0.286893   0.057082   \n\n   NM_000854  NM_000860  Contig29014_RC  Contig46616_RC  NM_000888  NM_000898  \\\n0  -0.760690  -0.164025       -0.038726        0.237856  -0.087631  -0.369153   \n1  -0.682204  -0.220934       -0.100088       -0.466537  -0.231547  -0.643019   \n2  -0.695950  -0.402840       -0.099965        0.110155  -0.114298   0.258495   \n3  -0.524640   0.037320       -0.167688       -0.016790  -0.285344  -0.251188   \n4  -0.565021  -0.105632       -0.108148       -0.405853  -0.053601  -0.677072   \n\n   AF067420  eventdeath_0  eventdeath_1  \n0  0.153795             1             0  \n1 -0.014098             1             0  \n2 -0.198911             1             0  \n3  0.862710             1             0  \n4  0.134160             1             0  "},"exec_count":167}},"pos":30,"start":1657830553149,"state":"done","type":"cell"}
{"end":1657832835497,"exec_count":173,"id":"eb0d4f","input":"\nX = new_my_data.drop('survival', axis=1).values# Input features (attributes)\ny = new_my_data['survival'].values # Target vector\nprint('X shape: {}'.format(np.shape(X)))\nprint('y shape: {}'.format(np.shape(y)))\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.9, test_size=0.1, random_state=0)","kernel":"python3-ubuntu","output":{"0":{"name":"stdout","text":"X shape: (272, 40)\ny shape: (272,)\n"}},"pos":32,"start":1657832835471,"state":"done","type":"cell"}
{"end":1657833486985,"exec_count":178,"id":"6c3ffd","input":"import graphviz \n\ndot_data = tree.export_graphviz(dt, out_file=None, \n    feature_names=new_raw_data.drop('survival', axis=1).columns,    \n    class_names=new_raw_data['survival'].unique().astype(str),  \n    filled=True, rounded=True,  \n    special_characters=True)\ngraph = graphviz.Source(dot_data)\ngraph","kernel":"python3-ubuntu","output":{"0":{"ename":"ModuleNotFoundError","evalue":"No module named 'graphviz'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-178-7cbe15b9c02e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mgraphviz\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m dot_data = tree.export_graphviz(dt, out_file=None, \n\u001b[1;32m      4\u001b[0m     \u001b[0mfeature_names\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnew_raw_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'survival'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0mclass_names\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnew_raw_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'survival'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'graphviz'"]}},"pos":37,"start":1657833486964,"state":"done","type":"cell"}
{"end":1657833503224,"exec_count":179,"id":"804f3f","input":"rf = RandomForestClassifier(n_estimators=100, criterion='entropy')\nrf.fit(X_train, y_train)\nprediction_test = rf.predict(X=X_test)\n\n\n# Accuracy on Test\nprint(\"Training Accuracy is: \", rf.score(X_train, y_train))\n# Accuracy on Train\nprint(\"Testing Accuracy is: \", rf.score(X_test, y_test))\n\n# Confusion Matrix\ncm = confusion_matrix(y_test, prediction_test)\ncm_norm = cm/cm.sum(axis=1)[:, np.newaxis]\nplt.figure()\nplot_confusion_matrix(cm_norm, classes=rf.classes_)","kernel":"python3-ubuntu","output":{"0":{"ename":"ValueError","evalue":"Unknown label type: 'continuous'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-179-49cbf14bc3c7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mrf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRandomForestClassifier\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_estimators\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcriterion\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'entropy'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mrf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mprediction_test\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/sklearn/ensemble/_forest.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m    365\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn_outputs_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    366\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 367\u001b[0;31m         \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexpanded_class_weight\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_y_class_weight\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    368\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    369\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"dtype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mDOUBLE\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontiguous\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/sklearn/ensemble/_forest.py\u001b[0m in \u001b[0;36m_validate_y_class_weight\u001b[0;34m(self, y)\u001b[0m\n\u001b[1;32m    732\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    733\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_validate_y_class_weight\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 734\u001b[0;31m         \u001b[0mcheck_classification_targets\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    735\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    736\u001b[0m         \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/sklearn/utils/multiclass.py\u001b[0m in \u001b[0;36mcheck_classification_targets\u001b[0;34m(y)\u001b[0m\n\u001b[1;32m    195\u001b[0m         \u001b[0;34m\"multilabel-sequences\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    196\u001b[0m     ]:\n\u001b[0;32m--> 197\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Unknown label type: %r\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0my_type\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    198\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    199\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Unknown label type: 'continuous'"]}},"pos":41,"start":1657833503193,"state":"done","type":"cell"}
{"end":1657834469977,"exec_count":194,"id":"6de52f","input":"# Checking for null values\nmy_data.isnull().sum()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"Patient           0\nID                0\nage               0\neventdeath        0\nsurvival          0\n                 ..\nContig29014_RC    0\nContig46616_RC    0\nNM_000888         0\nNM_000898         0\nAF067420          0\nLength: 1570, dtype: int64"},"exec_count":194}},"pos":4,"start":1657834469943,"state":"done","type":"cell"}
{"end":1657834662432,"exec_count":195,"id":"657077","input":"my_data.columns","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"Index(['Patient', 'ID', 'age', 'eventdeath', 'survival', 'timerecurrence',\n       'chemo', 'hormonal', 'amputation', 'histtype',\n       ...\n       'Contig36312_RC', 'Contig38980_RC', 'NM_000853', 'NM_000854',\n       'NM_000860', 'Contig29014_RC', 'Contig46616_RC', 'NM_000888',\n       'NM_000898', 'AF067420'],\n      dtype='object', length=1570)"},"exec_count":195}},"pos":3.5,"start":1657834662427,"state":"done","type":"cell"}
{"end":1657835002423,"exec_count":198,"id":"92640e","input":"my_data = my_data[['ID', 'age', 'eventdeath', 'survival', 'timerecurrence',\n                  'chemo', 'hormonal', 'amputation', 'histtype']]","kernel":"python3-ubuntu","pos":3.625,"start":1657835002417,"state":"done","type":"cell"}
{"end":1657835032938,"exec_count":199,"id":"a9858b","input":"my_data.head(5)","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>age</th>\n      <th>eventdeath</th>\n      <th>survival</th>\n      <th>timerecurrence</th>\n      <th>chemo</th>\n      <th>hormonal</th>\n      <th>amputation</th>\n      <th>histtype</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>18</td>\n      <td>43</td>\n      <td>0</td>\n      <td>14.817248</td>\n      <td>14.817248</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>19</td>\n      <td>48</td>\n      <td>0</td>\n      <td>14.261465</td>\n      <td>14.261465</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>20</td>\n      <td>38</td>\n      <td>0</td>\n      <td>6.644764</td>\n      <td>6.644764</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>21</td>\n      <td>50</td>\n      <td>0</td>\n      <td>7.748118</td>\n      <td>7.748118</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>22</td>\n      <td>38</td>\n      <td>0</td>\n      <td>6.436687</td>\n      <td>6.318960</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   ID  age  eventdeath   survival  timerecurrence  chemo  hormonal  \\\n0  18   43           0  14.817248       14.817248      0         0   \n1  19   48           0  14.261465       14.261465      0         0   \n2  20   38           0   6.644764        6.644764      0         0   \n3  21   50           0   7.748118        7.748118      0         1   \n4  22   38           0   6.436687        6.318960      0         0   \n\n   amputation  histtype  \n0           1         1  \n1           0         1  \n2           0         1  \n3           0         1  \n4           1         1  "},"exec_count":199}},"pos":3.6875,"start":1657835032921,"state":"done","type":"cell"}
{"end":1657835041230,"exec_count":200,"id":"8ec63d","input":"my_data.describe","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"<bound method NDFrame.describe of       ID  age  eventdeath   survival  timerecurrence  chemo  hormonal  \\\n0     18   43           0  14.817248       14.817248      0         0   \n1     19   48           0  14.261465       14.261465      0         0   \n2     20   38           0   6.644764        6.644764      0         0   \n3     21   50           0   7.748118        7.748118      0         1   \n4     22   38           0   6.436687        6.318960      0         0   \n..   ...  ...         ...        ...             ...    ...       ...   \n267  308   48           1   2.608300        1.982204      1         0   \n268  309   39           1   5.504100        3.028063      0         0   \n269  310   50           1   2.619200        2.149213      0         0   \n270  311   52           1   2.290500        2.209446      0         1   \n271  312   52           1   3.737000        2.127310      0         0   \n\n     amputation  histtype  \n0             1         1  \n1             0         1  \n2             0         1  \n3             0         1  \n4             1         1  \n..          ...       ...  \n267           1         1  \n268           1         1  \n269           1         1  \n270           1         1  \n271           1         1  \n\n[272 rows x 9 columns]>"},"exec_count":200}},"pos":3.75,"start":1657835041176,"state":"done","type":"cell"}
{"exec_count":150,"id":"985232","input":"# Investigate all the features by our y\n\nfeatures = [['age', 'eventdeath']]\n\n\nfor f in features:\n    plt.figure()\n    ax = sns.countplot(x=f, data=my_data2, hue = my_data [\"survival\"].apply(divide_survival), palette=\"Set1\")","kernel":"python3-ubuntu","output":{"0":{"data":{"image/png":"1d10c9c111ca8ba3e0af52f044e7982005a288c1","text/plain":"<Figure size 576x432 with 1 Axes>"},"metadata":{"image/png":{"height":376,"width":510}}},"1":{"data":{"image/png":"60146cc014144b533ab737d6bad360b15634c6b4","text/plain":"<Figure size 576x432 with 1 Axes>"},"metadata":{"image/png":{"height":376,"width":507}}}},"pos":23,"state":"done","type":"cell"}
{"id":"25bf8a","input":"","kernel":"python3-ubuntu","pos":14,"type":"cell"}
{"id":"30bb5c","input":"","kernel":"python3-ubuntu","pos":26,"type":"cell"}
{"id":"403350","input":"","pos":42,"type":"cell"}
{"id":"558bb0","input":"","kernel":"python3-ubuntu","pos":20,"scrolled":true,"type":"cell"}
{"id":"5836c4","input":"","kernel":"python3-ubuntu","pos":35,"type":"cell"}
{"id":"775056","input":"","pos":56,"type":"cell"}
{"id":"7ca891","input":"","pos":43,"type":"cell"}
{"id":"7fdb54","input":"","pos":38,"type":"cell"}
{"id":"9babf0","input":"","pos":55,"type":"cell"}
{"id":"b35ed5","input":"","pos":52,"type":"cell"}
{"id":"d4fbf9","input":"","pos":54,"type":"cell"}
{"id":"e83241","input":"","pos":24,"type":"cell"}
{"id":"ed42e5","input":"","pos":39,"type":"cell"}
{"id":0,"time":1657822159599,"type":"user"}
{"last_load":1657814149648,"type":"file"}