{"backend_state":"running","connection_file":"/projects/0f214c2c-3a4f-4d36-bdfe-4d58d7af3d54/.local/share/jupyter/runtime/kernel-34cdde95-39b0-4e25-8bf6-a39c4939ba61.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657655429305,"exec_count":2,"id":"58b22b","input":"import pandas as pd  #import pandas library and rename it as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport statistics\nfrom sklearn.linear_model import LinearRegression","kernel":"python3-ubuntu","pos":1,"start":1657655429298,"state":"done","type":"cell"}
{"cell_type":"code","end":1657655432505,"exec_count":3,"id":"d35048","input":"df = pd.read_csv(\"./NKI_cleaned.csv\")  #loads the NKI_cleaned.csv data file assigned as df (dataframe)","kernel":"python3-ubuntu","pos":2,"start":1657655432378,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"1b76aa","input":"","pos":43,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"5528df","input":"df = pd.read_csv(\"./NKI_cleaned.csv\")","pos":45,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"580a30","input":"\n...\n# line plot of k mean values with min/max error bars\npyplot.errorbar(folds, means, yerr=[mins, maxs], fmt='o')\n# plot the ideal case in a separate color\npyplot.plot(folds, [ideal for _ in range(len(folds))], color='r')\n# show the plot\npyplot.show()","pos":52,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"da7cfd","input":"df.dropna(inplace=True)","pos":10,"type":"cell"}
{"cell_type":"code","exec_count":100,"id":"fb76fa","input":"# create the dataset\ndef df(n_samples=100):\n    X, y = make_classification(n_samples=n_samples, n_features=20, n_informative=15, n_redundant=5, random_state=1)\n    return X, y","pos":46,"type":"cell"}
{"cell_type":"code","exec_count":101,"id":"c60ee2","input":"# retrieve the model to be evaluate\ndef get_model():\n    model = LogisticRegression()\n    return model","pos":47,"type":"cell"}
{"cell_type":"code","exec_count":102,"id":"784064","input":"# retrieve the model to be evaluate\ndef get_model():\n    model = LogisticRegression()\n    return model","pos":48,"type":"cell"}
{"cell_type":"code","exec_count":107,"id":"4dd46b","input":"# calculate the ideal test condition\nideal, \"survival\", \"chemo\" re = evaluate_model(LeaveOneOut())\nprint('Ideal: %.3f' % ideal)","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (<ipython-input-107-6a75913c65ca>, line 2)","output_type":"error","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-107-6a75913c65ca>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    ideal, \"survival\", \"chemo\" re = evaluate_model(LeaveOneOut())\u001b[0m\n\u001b[0m                               ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":49,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"26a2a5","input":"df.shape #NKI_cleaned.csv dropped no columns since it is a clean data","output":{"0":{"data":{"text/plain":"(272, 1570)"},"exec_count":11,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"10d752","input":"df2=df[[\"Patient\",\"survival\",]]","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"4d3e08","input":"df.head(4)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Patient</th>\n      <th>ID</th>\n      <th>age</th>\n      <th>eventdeath</th>\n      <th>survival</th>\n      <th>timerecurrence</th>\n      <th>chemo</th>\n      <th>hormonal</th>\n      <th>amputation</th>\n      <th>histtype</th>\n      <th>...</th>\n      <th>Contig36312_RC</th>\n      <th>Contig38980_RC</th>\n      <th>NM_000853</th>\n      <th>NM_000854</th>\n      <th>NM_000860</th>\n      <th>Contig29014_RC</th>\n      <th>Contig46616_RC</th>\n      <th>NM_000888</th>\n      <th>NM_000898</th>\n      <th>AF067420</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>s122</td>\n      <td>18</td>\n      <td>43</td>\n      <td>0</td>\n      <td>14.817248</td>\n      <td>14.817248</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0.591103</td>\n      <td>-0.355018</td>\n      <td>0.373644</td>\n      <td>-0.760690</td>\n      <td>-0.164025</td>\n      <td>-0.038726</td>\n      <td>0.237856</td>\n      <td>-0.087631</td>\n      <td>-0.369153</td>\n      <td>0.153795</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>s123</td>\n      <td>19</td>\n      <td>48</td>\n      <td>0</td>\n      <td>14.261465</td>\n      <td>14.261465</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>-0.199829</td>\n      <td>-0.001635</td>\n      <td>-0.062922</td>\n      <td>-0.682204</td>\n      <td>-0.220934</td>\n      <td>-0.100088</td>\n      <td>-0.466537</td>\n      <td>-0.231547</td>\n      <td>-0.643019</td>\n      <td>-0.014098</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>s124</td>\n      <td>20</td>\n      <td>38</td>\n      <td>0</td>\n      <td>6.644764</td>\n      <td>6.644764</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0.328736</td>\n      <td>-0.047571</td>\n      <td>0.084228</td>\n      <td>-0.695950</td>\n      <td>-0.402840</td>\n      <td>-0.099965</td>\n      <td>0.110155</td>\n      <td>-0.114298</td>\n      <td>0.258495</td>\n      <td>-0.198911</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>s125</td>\n      <td>21</td>\n      <td>50</td>\n      <td>0</td>\n      <td>7.748118</td>\n      <td>7.748118</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0.648861</td>\n      <td>-0.039088</td>\n      <td>0.182182</td>\n      <td>-0.524640</td>\n      <td>0.037320</td>\n      <td>-0.167688</td>\n      <td>-0.016790</td>\n      <td>-0.285344</td>\n      <td>-0.251188</td>\n      <td>0.862710</td>\n    </tr>\n  </tbody>\n</table>\n<p>4 rows Ã— 1570 columns</p>\n</div>","text/plain":"  Patient  ID  age  eventdeath   survival  timerecurrence  chemo  hormonal  \\\n0    s122  18   43           0  14.817248       14.817248      0         0   \n1    s123  19   48           0  14.261465       14.261465      0         0   \n2    s124  20   38           0   6.644764        6.644764      0         0   \n3    s125  21   50           0   7.748118        7.748118      0         1   \n\n   amputation  histtype  ...  Contig36312_RC  Contig38980_RC  NM_000853  \\\n0           1         1  ...        0.591103       -0.355018   0.373644   \n1           0         1  ...       -0.199829       -0.001635  -0.062922   \n2           0         1  ...        0.328736       -0.047571   0.084228   \n3           0         1  ...        0.648861       -0.039088   0.182182   \n\n   NM_000854  NM_000860  Contig29014_RC  Contig46616_RC  NM_000888  NM_000898  \\\n0  -0.760690  -0.164025       -0.038726        0.237856  -0.087631  -0.369153   \n1  -0.682204  -0.220934       -0.100088       -0.466537  -0.231547  -0.643019   \n2  -0.695950  -0.402840       -0.099965        0.110155  -0.114298   0.258495   \n3  -0.524640   0.037320       -0.167688       -0.016790  -0.285344  -0.251188   \n\n   AF067420  \n0  0.153795  \n1 -0.014098  \n2 -0.198911  \n3  0.862710  \n\n[4 rows x 1570 columns]"},"exec_count":13,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"ae2255","input":"df.iloc[10:15, 2:4] #shows rows 10,11,12,13,&14 and columns 2 and 3 \"df.iloc[row_start:row_end , col_start, col_end]\"","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>eventdeath</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>10</th>\n      <td>47</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>32</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>38</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>45</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>31</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    age  eventdeath\n10   47           0\n11   32           0\n12   38           1\n13   45           0\n14   31           1"},"exec_count":14,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"cf927e","input":"df=df[['Patient', 'ID', 'age', 'eventdeath', 'survival', 'timerecurrence',\n       'chemo', 'hormonal', 'amputation', 'histtype']]","pos":15,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"ecc5b5","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Patient</th>\n      <th>ID</th>\n      <th>age</th>\n      <th>eventdeath</th>\n      <th>survival</th>\n      <th>timerecurrence</th>\n      <th>chemo</th>\n      <th>hormonal</th>\n      <th>amputation</th>\n      <th>histtype</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>s122</td>\n      <td>18</td>\n      <td>43</td>\n      <td>0</td>\n      <td>14.817248</td>\n      <td>14.817248</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>s123</td>\n      <td>19</td>\n      <td>48</td>\n      <td>0</td>\n      <td>14.261465</td>\n      <td>14.261465</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>s124</td>\n      <td>20</td>\n      <td>38</td>\n      <td>0</td>\n      <td>6.644764</td>\n      <td>6.644764</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>s125</td>\n      <td>21</td>\n      <td>50</td>\n      <td>0</td>\n      <td>7.748118</td>\n      <td>7.748118</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>s126</td>\n      <td>22</td>\n      <td>38</td>\n      <td>0</td>\n      <td>6.436687</td>\n      <td>6.318960</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  Patient  ID  age  eventdeath   survival  timerecurrence  chemo  hormonal  \\\n0    s122  18   43           0  14.817248       14.817248      0         0   \n1    s123  19   48           0  14.261465       14.261465      0         0   \n2    s124  20   38           0   6.644764        6.644764      0         0   \n3    s125  21   50           0   7.748118        7.748118      0         1   \n4    s126  22   38           0   6.436687        6.318960      0         0   \n\n   amputation  histtype  \n0           1         1  \n1           0         1  \n2           0         1  \n3           0         1  \n4           1         1  "},"exec_count":16,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"cd2de0","input":"import plotly.express as px #import plotly libraries and rename it px","pos":17,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"30580f","input":"fig = px.scatter(df, x = 'age', y = 'survival')\nfig.show()","output":{"0":{"data":{"iframe":"8fcd6393924ef2f3ad52096b717d7d7be228c324"},"exec_count":18,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"2ee244","input":"fig = px.scatter(df, x = 'age', y = 'timerecurrence')\nfig.show()","output":{"0":{"data":{"iframe":"9d8988d510b8c49b16a28b1bf06f979dc93df5e1"},"exec_count":19,"output_type":"execute_result"}},"pos":19,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"280ec3","input":"fig = px.scatter_matrix(df[[\"survival\", \"timerecurrence\", \"age\"]])\nfig.show()","output":{"0":{"data":{"iframe":"984ff076d2e5ae4db71e5be06615cf682dbef61a"},"exec_count":20,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"8b9656","input":"fig = px.box(df, x=\"chemo\", y=\"survival\")\nfig.show()","output":{"0":{"data":{"iframe":"6287058944f41775b52225e9fbedd775e4e5f223"},"exec_count":21,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"bad7eb","input":"fig = px.histogram(df, x=\"survival\")\nfig.show()","output":{"0":{"data":{"iframe":"a21064553ef7ca002f298709fc63d0033efd5b80"},"exec_count":22,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"3653d3","input":"fig = px.box(df, x=\"chemo\", y=\"survival\")\nfig.show()","output":{"0":{"data":{"iframe":"d0081fa247ea01c96ece29e1422eb360306019aa"},"exec_count":23,"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"346048","input":"import plotly.express as px\nfig = px.box(df, x='age', y='survival')\nfig.show()","output":{"0":{"data":{"iframe":"90bc1c09ca40c94fccb0f0766af9b900dbaa63d5"},"exec_count":24,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"f39b0b","input":"df.shape #Shows total number of rows and columns (row, col)","output":{"0":{"data":{"text/plain":"(272, 1570)"},"exec_count":3,"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"fe783a","input":"len(df.index) #Shows total number of rows","output":{"0":{"data":{"text/plain":"272"},"exec_count":4,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"778af7","input":"len(df.columns) #Shows total number of columns","output":{"0":{"data":{"text/plain":"1570"},"exec_count":5,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"a506f2","input":"df.index","output":{"0":{"data":{"text/plain":"RangeIndex(start=0, stop=272, step=1)"},"exec_count":6,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"d1ab71","input":"df.columns #Shows names of all columns","output":{"0":{"data":{"text/plain":"Index(['Patient', 'ID', 'age', 'eventdeath', 'survival', 'timerecurrence',\n       'chemo', 'hormonal', 'amputation', 'histtype',\n       ...\n       'Contig36312_RC', 'Contig38980_RC', 'NM_000853', 'NM_000854',\n       'NM_000860', 'Contig29014_RC', 'Contig46616_RC', 'NM_000888',\n       'NM_000898', 'AF067420'],\n      dtype='object', length=1570)"},"exec_count":7,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":74,"id":"bfa931","input":"def data_convert(num):\n    if num == 1:\n        return True\n    else:\n        return False\n    ","pos":25,"type":"cell"}
{"cell_type":"code","exec_count":75,"id":"02ec9e","input":"data_convert(1)","output":{"0":{"data":{"text/plain":"True"},"exec_count":75,"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":76,"id":"b0c588","input":"df[\"eventdeath\"].apply(data_convert)","output":{"0":{"data":{"text/plain":"0      False\n1      False\n2      False\n3      False\n4      False\n       ...  \n267     True\n268     True\n269     True\n270     True\n271     True\nName: eventdeath, Length: 272, dtype: bool"},"exec_count":76,"output_type":"execute_result"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":77,"id":"ebae7c","input":"df[\"chemo\"].apply(data_convert)","output":{"0":{"data":{"text/plain":"0      False\n1      False\n2      False\n3      False\n4      False\n       ...  \n267     True\n268    False\n269    False\n270    False\n271    False\nName: chemo, Length: 272, dtype: bool"},"exec_count":77,"output_type":"execute_result"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":78,"id":"a76fca","input":"df[\"amputation\"].apply(data_convert)","output":{"0":{"data":{"text/plain":"0       True\n1      False\n2      False\n3      False\n4       True\n       ...  \n267     True\n268     True\n269     True\n270     True\n271     True\nName: amputation, Length: 272, dtype: bool"},"exec_count":78,"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":79,"id":"eeb3f4","input":"df[\"eventdeath\"] = df[\"eventdeath\"].apply(data_convert)","pos":30,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"014645","input":"df.head() #shows the first 5 rows of data, when left blank in () will show default number of rows which is 5 rows","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Patient</th>\n      <th>ID</th>\n      <th>age</th>\n      <th>eventdeath</th>\n      <th>survival</th>\n      <th>timerecurrence</th>\n      <th>chemo</th>\n      <th>hormonal</th>\n      <th>amputation</th>\n      <th>histtype</th>\n      <th>...</th>\n      <th>Contig36312_RC</th>\n      <th>Contig38980_RC</th>\n      <th>NM_000853</th>\n      <th>NM_000854</th>\n      <th>NM_000860</th>\n      <th>Contig29014_RC</th>\n      <th>Contig46616_RC</th>\n      <th>NM_000888</th>\n      <th>NM_000898</th>\n      <th>AF067420</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>s122</td>\n      <td>18</td>\n      <td>43</td>\n      <td>0</td>\n      <td>14.817248</td>\n      <td>14.817248</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0.591103</td>\n      <td>-0.355018</td>\n      <td>0.373644</td>\n      <td>-0.760690</td>\n      <td>-0.164025</td>\n      <td>-0.038726</td>\n      <td>0.237856</td>\n      <td>-0.087631</td>\n      <td>-0.369153</td>\n      <td>0.153795</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>s123</td>\n      <td>19</td>\n      <td>48</td>\n      <td>0</td>\n      <td>14.261465</td>\n      <td>14.261465</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>-0.199829</td>\n      <td>-0.001635</td>\n      <td>-0.062922</td>\n      <td>-0.682204</td>\n      <td>-0.220934</td>\n      <td>-0.100088</td>\n      <td>-0.466537</td>\n      <td>-0.231547</td>\n      <td>-0.643019</td>\n      <td>-0.014098</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>s124</td>\n      <td>20</td>\n      <td>38</td>\n      <td>0</td>\n      <td>6.644764</td>\n      <td>6.644764</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0.328736</td>\n      <td>-0.047571</td>\n      <td>0.084228</td>\n      <td>-0.695950</td>\n      <td>-0.402840</td>\n      <td>-0.099965</td>\n      <td>0.110155</td>\n      <td>-0.114298</td>\n      <td>0.258495</td>\n      <td>-0.198911</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>s125</td>\n      <td>21</td>\n      <td>50</td>\n      <td>0</td>\n      <td>7.748118</td>\n      <td>7.748118</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0.648861</td>\n      <td>-0.039088</td>\n      <td>0.182182</td>\n      <td>-0.524640</td>\n      <td>0.037320</td>\n      <td>-0.167688</td>\n      <td>-0.016790</td>\n      <td>-0.285344</td>\n      <td>-0.251188</td>\n      <td>0.862710</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>s126</td>\n      <td>22</td>\n      <td>38</td>\n      <td>0</td>\n      <td>6.436687</td>\n      <td>6.318960</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>-0.287538</td>\n      <td>-0.286893</td>\n      <td>0.057082</td>\n      <td>-0.565021</td>\n      <td>-0.105632</td>\n      <td>-0.108148</td>\n      <td>-0.405853</td>\n      <td>-0.053601</td>\n      <td>-0.677072</td>\n      <td>0.134160</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 1570 columns</p>\n</div>","text/plain":"  Patient  ID  age  eventdeath   survival  timerecurrence  chemo  hormonal  \\\n0    s122  18   43           0  14.817248       14.817248      0         0   \n1    s123  19   48           0  14.261465       14.261465      0         0   \n2    s124  20   38           0   6.644764        6.644764      0         0   \n3    s125  21   50           0   7.748118        7.748118      0         1   \n4    s126  22   38           0   6.436687        6.318960      0         0   \n\n   amputation  histtype  ...  Contig36312_RC  Contig38980_RC  NM_000853  \\\n0           1         1  ...        0.591103       -0.355018   0.373644   \n1           0         1  ...       -0.199829       -0.001635  -0.062922   \n2           0         1  ...        0.328736       -0.047571   0.084228   \n3           0         1  ...        0.648861       -0.039088   0.182182   \n4           1         1  ...       -0.287538       -0.286893   0.057082   \n\n   NM_000854  NM_000860  Contig29014_RC  Contig46616_RC  NM_000888  NM_000898  \\\n0  -0.760690  -0.164025       -0.038726        0.237856  -0.087631  -0.369153   \n1  -0.682204  -0.220934       -0.100088       -0.466537  -0.231547  -0.643019   \n2  -0.695950  -0.402840       -0.099965        0.110155  -0.114298   0.258495   \n3  -0.524640   0.037320       -0.167688       -0.016790  -0.285344  -0.251188   \n4  -0.565021  -0.105632       -0.108148       -0.405853  -0.053601  -0.677072   \n\n   AF067420  \n0  0.153795  \n1 -0.014098  \n2 -0.198911  \n3  0.862710  \n4  0.134160  \n\n[5 rows x 1570 columns]"},"exec_count":8,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":80,"id":"3fcfe5","input":"df[\"chemo\"] = df[\"chemo\"].apply(data_convert)","pos":31,"type":"cell"}
{"cell_type":"code","exec_count":81,"id":"d9a31c","input":"df[\"amputation\"] = df[\"amputation\"].apply(data_convert)","pos":32,"type":"cell"}
{"cell_type":"code","exec_count":82,"id":"a02c98","input":"df","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Patient</th>\n      <th>ID</th>\n      <th>age</th>\n      <th>eventdeath</th>\n      <th>survival</th>\n      <th>timerecurrence</th>\n      <th>chemo</th>\n      <th>hormonal</th>\n      <th>amputation</th>\n      <th>histtype</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>s122</td>\n      <td>18</td>\n      <td>43</td>\n      <td>False</td>\n      <td>14.817248</td>\n      <td>14.817248</td>\n      <td>False</td>\n      <td>0</td>\n      <td>True</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>s123</td>\n      <td>19</td>\n      <td>48</td>\n      <td>False</td>\n      <td>14.261465</td>\n      <td>14.261465</td>\n      <td>False</td>\n      <td>0</td>\n      <td>False</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>s124</td>\n      <td>20</td>\n      <td>38</td>\n      <td>False</td>\n      <td>6.644764</td>\n      <td>6.644764</td>\n      <td>False</td>\n      <td>0</td>\n      <td>False</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>s125</td>\n      <td>21</td>\n      <td>50</td>\n      <td>False</td>\n      <td>7.748118</td>\n      <td>7.748118</td>\n      <td>False</td>\n      <td>1</td>\n      <td>False</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>s126</td>\n      <td>22</td>\n      <td>38</td>\n      <td>False</td>\n      <td>6.436687</td>\n      <td>6.318960</td>\n      <td>False</td>\n      <td>0</td>\n      <td>True</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>267</th>\n      <td>s71</td>\n      <td>308</td>\n      <td>48</td>\n      <td>True</td>\n      <td>2.608300</td>\n      <td>1.982204</td>\n      <td>True</td>\n      <td>0</td>\n      <td>True</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>268</th>\n      <td>s72</td>\n      <td>309</td>\n      <td>39</td>\n      <td>True</td>\n      <td>5.504100</td>\n      <td>3.028063</td>\n      <td>False</td>\n      <td>0</td>\n      <td>True</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>269</th>\n      <td>s73</td>\n      <td>310</td>\n      <td>50</td>\n      <td>True</td>\n      <td>2.619200</td>\n      <td>2.149213</td>\n      <td>False</td>\n      <td>0</td>\n      <td>True</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>270</th>\n      <td>s75</td>\n      <td>311</td>\n      <td>52</td>\n      <td>True</td>\n      <td>2.290500</td>\n      <td>2.209446</td>\n      <td>False</td>\n      <td>1</td>\n      <td>True</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>271</th>\n      <td>s76</td>\n      <td>312</td>\n      <td>52</td>\n      <td>True</td>\n      <td>3.737000</td>\n      <td>2.127310</td>\n      <td>False</td>\n      <td>0</td>\n      <td>True</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>272 rows Ã— 10 columns</p>\n</div>","text/plain":"    Patient   ID  age  eventdeath   survival  timerecurrence  chemo  hormonal  \\\n0      s122   18   43       False  14.817248       14.817248  False         0   \n1      s123   19   48       False  14.261465       14.261465  False         0   \n2      s124   20   38       False   6.644764        6.644764  False         0   \n3      s125   21   50       False   7.748118        7.748118  False         1   \n4      s126   22   38       False   6.436687        6.318960  False         0   \n..      ...  ...  ...         ...        ...             ...    ...       ...   \n267     s71  308   48        True   2.608300        1.982204   True         0   \n268     s72  309   39        True   5.504100        3.028063  False         0   \n269     s73  310   50        True   2.619200        2.149213  False         0   \n270     s75  311   52        True   2.290500        2.209446  False         1   \n271     s76  312   52        True   3.737000        2.127310  False         0   \n\n     amputation  histtype  \n0          True         1  \n1         False         1  \n2         False         1  \n3         False         1  \n4          True         1  \n..          ...       ...  \n267        True         1  \n268        True         1  \n269        True         1  \n270        True         1  \n271        True         1  \n\n[272 rows x 10 columns]"},"exec_count":82,"output_type":"execute_result"}},"pos":33,"type":"cell"}
{"cell_type":"code","exec_count":83,"id":"69e968","input":"df.groupby([\"chemo\", \"amputation\"])[\"survival\"].mean()","output":{"0":{"data":{"text/plain":"chemo  amputation\nFalse  False         8.187591\n       True          7.955200\nTrue   False         8.159675\n       True          7.962082\nName: survival, dtype: float64"},"exec_count":83,"output_type":"execute_result"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":84,"id":"b829af","input":"df_champ = df.groupby([\"chemo\", \"amputation\"])[\"survival\"].mean()","pos":35,"type":"cell"}
{"cell_type":"code","exec_count":85,"id":"e6ced1","input":"df_champ","output":{"0":{"data":{"text/plain":"chemo  amputation\nFalse  False         8.187591\n       True          7.955200\nTrue   False         8.159675\n       True          7.962082\nName: survival, dtype: float64"},"exec_count":85,"output_type":"execute_result"}},"pos":36,"type":"cell"}
{"cell_type":"code","exec_count":86,"id":"f03bef","input":"df_champ = df_champ.reset_index()","pos":37,"type":"cell"}
{"cell_type":"code","exec_count":87,"id":"d5d059","input":"df_champ","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>chemo</th>\n      <th>amputation</th>\n      <th>survival</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>False</td>\n      <td>False</td>\n      <td>8.187591</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>False</td>\n      <td>True</td>\n      <td>7.955200</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>True</td>\n      <td>False</td>\n      <td>8.159675</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>True</td>\n      <td>True</td>\n      <td>7.962082</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   chemo  amputation  survival\n0  False       False  8.187591\n1  False        True  7.955200\n2   True       False  8.159675\n3   True        True  7.962082"},"exec_count":87,"output_type":"execute_result"}},"pos":38,"type":"cell"}
{"cell_type":"code","exec_count":88,"id":"0e2724","input":"type(df_champ) #mean value type is float64","output":{"0":{"data":{"text/plain":"pandas.core.frame.DataFrame"},"exec_count":88,"output_type":"execute_result"}},"pos":39,"type":"cell"}
{"cell_type":"code","exec_count":89,"id":"b876e5","input":"df.matrix = df_champ.pivot_table(values = \"survival\", index = \"chemo\", columns = \"amputation\")","output":{"0":{"name":"stderr","output_type":"stream","text":"<ipython-input-89-dfcbf137d651>:1: UserWarning:\n\nPandas doesn't allow columns to be created via a new attribute name - see https://pandas.pydata.org/pandas-docs/stable/indexing.html#attribute-access\n\n"}},"pos":40,"type":"cell"}
{"cell_type":"code","exec_count":90,"id":"fc0933","input":"px.imshow(df.matrix, labels = dict(color = \"Avg.SurvivalRate\"))","output":{"0":{"data":{"iframe":"03e8c67452bf59f69a40cbcecdc0acdf0ca5a95d"},"exec_count":90,"output_type":"execute_result"}},"pos":41,"type":"cell"}
{"cell_type":"code","exec_count":91,"id":"afa208","input":"# test classification dataset\nfrom sklearn.datasets import make_classification\n# define dataset\nX, y = make_classification(n_samples=100, n_features=20, n_informative=15, n_redundant=5, random_state=1)\n# summarize the dataset\nprint(X.shape, y.shape)","output":{"0":{"name":"stdout","output_type":"stream","text":"(100, 20) (100,)\n"}},"pos":42,"type":"cell"}
{"cell_type":"code","exec_count":92,"id":"8fbf57","input":"\n# evaluate a logistic regression model using k-fold cross-validation\nfrom numpy import mean\nfrom numpy import std\nfrom sklearn.datasets import make_classification\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\n# create dataset\nX, y = make_classification(n_samples=100, n_features=20, n_informative=15, n_redundant=5, random_state=1)\n# prepare the cross-validation procedure\ncv = KFold(n_splits=10, random_state=1, shuffle=True)\n# create model\nmodel = LogisticRegression()\n# evaluate model\nscores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n# report performance\nprint('Accuracy: %.3f (%.3f)' % (mean(scores), std(scores)))","output":{"0":{"name":"stdout","output_type":"stream","text":"Accuracy: 0.850 (0.128)\n"}},"pos":44,"type":"cell"}
{"cell_type":"code","exec_count":98,"id":"55e0e8","input":"# define folds to test\nfolds = range(2,31)","pos":50,"type":"cell"}
{"cell_type":"code","exec_count":99,"id":"60846a","input":"...\n# record mean and min/max of each set of results\nmeans, mins, maxs = list(),list(),list()\n# evaluate each k value\nfor k in folds:\n\t# define the test condition\n\tcv = KFold(n_splits=k, shuffle=True, random_state=1)\n\t# evaluate k value\n\tk_mean, k_min, k_max = evaluate_model(cv)\n\t# report performance\n\tprint('> folds=%d, accuracy=%.3f (%.3f,%.3f)' % (k, k_mean, k_min, k_max))\n\t# store mean accuracy\n\tmeans.append(k_mean)\n\t# store min and max relative to the mean\n    mins.append(k_mean - k_min)\n    maxs.append(k_max - k_mean)","output":{"0":{"ename":"NameError","evalue":"name 'evaluate_model' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-99-b9923b04b370>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      7\u001b[0m         \u001b[0mcv\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mKFold\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_splits\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m         \u001b[0;31m# evaluate k value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m         \u001b[0mk_mean\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk_min\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk_max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mevaluate_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m         \u001b[0;31m# report performance\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'> folds=%d, accuracy=%.3f (%.3f,%.3f)'\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk_mean\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk_min\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk_max\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'evaluate_model' is not defined"]}},"pos":51,"type":"cell"}
{"cell_type":"markdown","id":"a8fefb","input":"**Clean Dataset**\n","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"f432fe","input":"**Import Libraries**","pos":0,"type":"cell"}
{"id":0,"time":1657655404672,"type":"user"}
{"last_load":1657643750236,"type":"file"}